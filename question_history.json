[
  "Can you explain the key differences between `var`, `let`, and `const` in JavaScript?",
  "What are the two main categories of data types in JavaScript, and what is the fundamental difference between how they are stored and accessed?",
  "Explain the concept of \"hoisting\" in JavaScript. Provide an example where hoisting affects variable and function declarations differently.",
  "Explain the difference between the `==` (loose equality) and `===` (strict equality) operators in JavaScript. When would you prefer to use one over the other?",
  "What is \"scope\" in JavaScript? Explain the concepts of Global Scope, Function Scope, and Block Scope.",
  "What are Arrow Functions in JavaScript? List at least three key differences between arrow functions and regular function declarations/expressions.",
  "Explain the concept of the `this` keyword in JavaScript. How is its value determined?",
  "Briefly explain the concept of the Event Loop in Node.js. Why is it fundamental to Node.js's non-blocking I/O model?",
  "How do you handle errors in synchronous and asynchronous JavaScript code? Explain the use of `try...catch` and discuss its limitations with asynchronous operations.",
  "Explain what \"truthy\" and \"falsy\" values are in JavaScript. List all the explicitly \"falsy\" values in JavaScript.",
  "Describe what implicit type coercion is in JavaScript. Provide an example where it might lead to unexpected results.",
  "Explain the purpose of a `for...of` loop in JavaScript and when you would prefer to use it over a traditional `for` loop or `for...in` loop.",
  "What is an Immediately Invoked Function Expression (IIFE) in JavaScript, and what are its primary uses?",
  "Explain the purpose and return value of the `Array.prototype.map()` method. How does it differ from `Array.prototype.forEach()`?",
  "How do you add, modify, and delete properties from a JavaScript object? Provide examples for each operation.",
  "What is a callback function in JavaScript? Provide a simple example demonstrating its use with `setTimeout`.",
  "Explain the concept of the prototype chain in JavaScript. How does JavaScript achieve inheritance through this mechanism?",
  "What is a closure in JavaScript? Provide an example demonstrating how a closure can retain access to an outer function's scope.",
  "Explain what destructuring assignment is in JavaScript and provide examples for both array and object destructuring.",
  "What are Template Literals in JavaScript, and what advantages do they offer over traditional string concatenation?",
  "Explain the difference between the `null` and `undefined` data types in JavaScript. When might you encounter each?",
  "Describe the purpose of the spread (`...`) syntax and the rest (`...`) parameters in JavaScript. Provide an example for each.",
  "Explain the purpose of the `Array.prototype.filter()` method. How does it differ from `Array.prototype.map()` and `Array.prototype.forEach()`?",
  "Discuss the differences between CommonJS modules (used primarily in Node.js) and ES Modules (ESM, used in modern browsers and increasingly in Node.js). Focus on their syntax and how they handle imports/exports.",
  "What is \"Strict Mode\" in JavaScript, and why would you use `'use strict'`? List at least three specific changes or restrictions it introduces.",
  "Explain the concept of Promises in JavaScript. How do they help manage asynchronous operations more effectively than traditional callbacks, and what are their three possible states?",
  "Explain the difference between `Promise.all()` and `Promise.race()`. When would you use one over the other?",
  "In Node.js, what is the `process` object, and what are some of its key properties or methods that developers commonly interact with?",
  "Explain the difference between passing arguments by value and by reference in JavaScript functions.",
  "How do you check the data type of a variable in JavaScript? Discuss `typeof` and its known limitations.",
  "Explain the purpose of the `isNaN()` function and the global `NaN` property in JavaScript. What are some common scenarios where `NaN` might appear?",
  "Describe \"short-circuiting\" with logical operators (`&&`, `||`) in JavaScript. Provide a simple example for each.",
  "Explain the concept of `async` and `await` in JavaScript. How do they simplify asynchronous code compared to using Promises directly or traditional callbacks?",
  "Describe the difference between `Array.prototype.slice()` and `Array.prototype.splice()` methods in JavaScript. Provide use cases for each.",
  "Explain the purpose of the `Array.prototype.reduce()` method in JavaScript. How does it work, and what are its main parameters?",
  "Describe the purpose and usage of `Object.keys()`, `Object.values()`, and `Object.entries()` methods in JavaScript.",
  "Explain the differences between `String.prototype.indexOf()` and `String.prototype.includes()` methods. When would you use one over the other?",
  "In Node.js, what is the purpose of the `fs` (File System) module? Give a simple example of reading a file asynchronously.",
  "Explain the difference between `call()`, `apply()`, and `bind()` methods in JavaScript. How do they affect the `this` context of a function?",
  "Describe how the `new` keyword works in JavaScript when used with a constructor function. What does it return, and what happens behind the scenes?",
  "In JavaScript, how do you explicitly convert a string to a number, and vice versa? Provide at least two methods for each direction.",
  "Explain the primary purpose of `console.log()` and `console.dir()` in JavaScript debugging. When would you choose to use `console.dir()` over `console.log()`?",
  "The `typeof` operator is commonly used to check the data type of a variable. Explain what `typeof null` returns in JavaScript and why this is considered a \"quirk\" or a \"bug.\"",
  "In JavaScript, what is the most reliable way to determine if a given variable is an array? Why is this method preferred over others like `typeof` or `instanceof`?",
  "Explain the concept of \"method chaining\" in JavaScript. How is it implemented, and what are its primary benefits? Provide a simple code example.",
  "What are getters and setters in JavaScript objects, and why would you use them? Provide an example.",
  "In Node.js, when using CommonJS modules, what is the fundamental difference between `module.exports` and `exports`? Explain when you should use one over the other.",
  "Explain the purpose of `JSON.stringify()` and `JSON.parse()` in JavaScript. When would you use each?",
  "What is the purpose of the `package.json` file in a Node.js project? Name a few key fields you would typically find in it.",
  "Describe the difference between a primitive value and an object in JavaScript, focusing on how they are handled in terms of mutability and assignment.",
  "Explain the difference between `console.log()` and `console.error()` in Node.js (or browser). When would you choose to use `console.error()`?",
  "What are `Set` and `Map` in JavaScript? Describe a practical use case for each.",
  "Explain the difference between synchronous and asynchronous operations in JavaScript. Provide an example of each.",
  "In Node.js, what are `__dirname` and `__filename`? When are they useful?",
  "Explain the concept of recursion in JavaScript. Provide a simple example of a recursive function. What are the potential drawbacks?",
  "Describe what an Event Emitter is in Node.js. How does it facilitate an event-driven architecture? Provide a simple code example.",
  "Explain the purpose and usage of the `Object.freeze()` and `Object.seal()` methods in JavaScript. How do they differ?",
  "What is the purpose of the `Symbol` data type in JavaScript? Provide a simple use case where `Symbol` would be beneficial.",
  "Explain the concept of \"currying\" in JavaScript. Why might you use it, and what are its main benefits?",
  "In Node.js, what is the main difference between `process.nextTick()` and `setImmediate()`? When would you typically use one over the other?",
  "Describe what a \"middleware\" function is in the context of a Node.js web framework like Express.js. How does it typically receive control and pass it on?",
  "Explain the concept of JavaScript Generators. How do they differ from regular functions, and what is the `yield` keyword used for?",
  "What are Node.js `Buffer`s, and why are they necessary? Provide a simple example of creating a `Buffer` from a string.",
  "What are optional chaining (`?.`) and nullish coalescing (`??`) operators in JavaScript? Provide a scenario where each would be particularly useful.",
  "How do you add event listeners to DOM elements in JavaScript? Provide an example of adding a click event listener to a button.",
  "Explain the purpose of the `super` keyword in ES6 classes. When and why would you use it in a class constructor and in other methods?",
  "What is a \"pure function\" in JavaScript, and what are its main characteristics? Why are pure functions considered beneficial in programming?",
  "Explain the concept of \"event delegation\" in JavaScript. Why is it beneficial, especially when dealing with a large number of dynamic elements?",
  "Describe what Node.js Streams are. What are the different types of streams, and why are they important for I/O operations in Node.js?"
]